% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_dir.R
\name{process_dir}
\alias{process_dir}
\title{Process a directory with DCT files}
\usage{
process_dir(path, extension = "dct", arrowDirection = "forward", regex,
  delimiterRegEx = "^---$", dctContainer = "dct",
  ignoreOddDelimiters = FALSE, silent = FALSE)
}
\arguments{
\item{path}{The path from where to read the DCT files.}

\item{extension}{The extension of the file; convenient alternative to
specifying a \code{regex}.}

\item{arrowDirection}{The direction of the arrows in the visual representation
of the distributed construct taxonomy; either \code{forward}, \code{back}, \code{both}, or \code{none}.}

\item{regex}{A regular expression; when provided, overrides the \code{extension}
argument to guide file selection in the \code{path}.}

\item{delimiterRegEx}{The regular expression specifying how the YAML fragments
specifying the constructs are delimited. Should normally never be changed.}

\item{dctContainer}{The container of the DCT specifications in the YAML
fragments. Because only DCT specifications are read that are stored in
this container, the files can contain YAML fragments with other data, too,
without interfering with the parsing of the DCT specifications.}

\item{ignoreOddDelimiters}{Whether to ignore a final odd delimiter, if
encountered.}

\item{silent}{Whether to provide information on progress.}
}
\value{
An object with the \link[DiagrammeR:DiagrammeR]{DiagrammeR::DiagrammeR} graph stored
in \code{output$graph} and the instructions in \code{output$instr} (the result of
a call to \code{\link[=parse_dct_specs]{parse_dct_specs()}} on all matching files).
}
\description{
This function locates and parses all DCT files in a directory. These
files are then parsed into a DiagrammeR graph as well as lists of
instructions for development and coding.
}
\examples{
\dontrun{process_dir("A:/path/to/some/directory");
}
}
